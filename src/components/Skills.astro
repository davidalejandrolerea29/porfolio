---
interface Skill {
  name: string;
  level: number;
}

interface Props {
  skills: Skill[];
}

const { skills } = Astro.props;
---
<section id="skills" class="py-20 px-4 relative">
  <div class="max-w-6xl mx-auto">
    <h2 class="text-4xl font-bold text-center mb-12 text-gradient">Skills</h2>
    <div class="grid grid-cols-2 md:grid-cols-3 gap-8">
      {skills.map((skill) => (
        <div class="group">
          <div class="bg-gray-800/80 backdrop-blur-sm p-6 rounded-xl transform transition-all duration-300 hover:scale-105 hover:shadow-xl hover:shadow-purple-500/20">
            <h3 class="text-xl mb-4 font-semibold group-hover:text-purple-400 transition-colors">{skill.name}</h3>
            <div class="relative h-2.5 bg-gray-700 rounded-full overflow-hidden">
              <div
                class="absolute top-0 left-0 h-full bg-gradient-to-r from-purple-500 to-pink-500 rounded-full transition-all duration-1000 ease-out"
                style={`width: ${skill.level}%`}
              >
                <div class="absolute inset-0 bg-gradient-to-r from-transparent to-white/20 animate-shimmer"></div>
              </div>
            </div>
            <span class="block mt-2 text-right text-sm text-purple-300">{skill.level}%</span>
          </div>
        </div>
      ))}
    </div>
  </div>
</section>

<style>
  @keyframes shimmer {
    from {
      transform: translateX(-100%);
    }
    to {
      transform: translateX(100%);
    }
  }

  .animate-shimmer {
    animation: shimmer 2s infinite;
  }
</style>